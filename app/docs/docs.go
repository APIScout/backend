// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/search": {
            "post": {
                "description": "Retrieve OpenAPI specifications matching the given query",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "search"
                ],
                "summary": "Search OpenAPI specifications",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "default": 1,
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "default": 10,
                        "description": "size of the page",
                        "name": "pageSize",
                        "in": "query"
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "default": 100,
                        "description": "knn's k",
                        "name": "k",
                        "in": "query"
                    },
                    {
                        "description": "search query",
                        "name": "fragment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.EmbeddingRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.SpecificationWithApi"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.HTTPError"
                        }
                    }
                }
            }
        },
        "/specification": {
            "post": {
                "description": "Insert new OpenAPI specifications in the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "specification"
                ],
                "summary": "Insert OpenAPI specifications",
                "parameters": [
                    {
                        "description": "New Specifications",
                        "name": "specifications",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SpecificationsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.HTTPError"
                        }
                    }
                }
            }
        },
        "/specification/{id}": {
            "get": {
                "description": "Retrieve a specific OpenAPI specification's content given a valid ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "specification"
                ],
                "summary": "Get OpenAPI specification",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Specification ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.SpecificationWithApi"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.HTTPError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Api": {
            "type": "object",
            "properties": {
                "commits": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "latest": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "source": {
                    "type": "string"
                },
                "version": {
                    "$ref": "#/definitions/models.Version"
                }
            }
        },
        "models.EmbeddingRequest": {
            "type": "object",
            "properties": {
                "filters": {
                    "type": "string"
                },
                "fragment": {
                    "type": "string"
                }
            }
        },
        "models.HTTPError": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 400
                },
                "message": {
                    "type": "string",
                    "example": "Bad Request"
                }
            }
        },
        "models.MongoDocument": {
            "type": "object",
            "properties": {
                "api": {
                    "$ref": "#/definitions/models.Api"
                },
                "mongo-id": {
                    "type": "string"
                },
                "specification": {
                    "$ref": "#/definitions/models.Specification"
                }
            }
        },
        "models.Specification": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string"
                },
                "version": {
                    "$ref": "#/definitions/models.Version"
                }
            }
        },
        "models.SpecificationBackend": {
            "type": "object",
            "additionalProperties": true
        },
        "models.SpecificationWithApi": {
            "type": "object",
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/models.MongoDocument"
                },
                "specification": {
                    "type": "string"
                }
            }
        },
        "models.SpecificationsRequest": {
            "type": "object",
            "properties": {
                "specifications": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.SpecificationBackend"
                    }
                }
            }
        },
        "models.Version": {
            "type": "object",
            "properties": {
                "build": {
                    "type": "string"
                },
                "major": {
                    "type": "integer"
                },
                "minor": {
                    "type": "integer"
                },
                "patch": {
                    "type": "integer"
                },
                "prerelease": {
                    "type": "string"
                },
                "raw": {
                    "type": "string"
                },
                "valid": {
                    "type": "boolean"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "API Scout",
	Description:      "This is the backend for the API Scout platform.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
